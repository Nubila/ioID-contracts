{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xA0C9f9A884cdAE649a42F16b057735Bc4fE786CD",
      "txHash": "0xbf98bbf134279fe646c92176d90961b6ef542353323ec05feb75a482f7ef9447",
      "kind": "transparent"
    },
    {
      "address": "0x5688aF9f5b3aaf6c92d1A31067b7DcB31B103CF7",
      "txHash": "0x6562051aaf0054f0fc3297b373df7647c329b38097feb6bb59adfae413ad5132",
      "kind": "transparent"
    },
    {
      "address": "0x6972C35dB95258DB79D662959244Eaa544812c5A",
      "kind": "transparent"
    },
    {
      "address": "0xB7E1419d62ef429EE3130aF822e43DaBDDdB4aCE",
      "kind": "transparent"
    },
    {
      "address": "0x3b9650B88a78e398613eBB442788Fc4eDd1eF768",
      "kind": "transparent"
    },
    {
      "address": "0x06b3Fcda51e01EE96e8E8873F0302381c955Fddd",
      "kind": "transparent"
    }
  ],
  "impls": {
    "0a195f62bc031d0de390ba1630e512540359f15b3a09f840b8a10612af5bae5f": {
      "address": "0xE29af862b1bB8ECfFfEA1132cdE709132A46Bc48",
      "txHash": "0x15f45388d317ec014af3accd3128070210405d6937196e437888904a6c7a6348",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "project",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:12"
          },
          {
            "label": "ioIDRegistry",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:13"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:14"
          },
          {
            "label": "projectDeviceContract",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:15"
          },
          {
            "label": "deviceContractProject",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:16"
          },
          {
            "label": "projectAppliedAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:17"
          },
          {
            "label": "projectActivedAmount",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "acdef78cd7b86f25fb56dcf4c4a40336b593f906e2de961cc535897cdefd5511": {
      "address": "0x3b149C22F26DBBb1Fa41F64bA10A79Df609b437C",
      "txHash": "0x76eef3cb50ec4c1249a84c33f3a3f64574557bba07e22e91ba5d264ce3a7235b",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "nextId",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ioID",
            "src": "contracts/ioID.sol:18"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "ioID",
            "src": "contracts/ioID.sol:19"
          },
          {
            "label": "walletRegistry",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "ioID",
            "src": "contracts/ioID.sol:20"
          },
          {
            "label": "walletImplementation",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ioID",
            "src": "contracts/ioID.sol:21"
          },
          {
            "label": "_wallets",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ioID",
            "src": "contracts/ioID.sol:23"
          },
          {
            "label": "_devices",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ioID",
            "src": "contracts/ioID.sol:24"
          },
          {
            "label": "deviceProject",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ioID",
            "src": "contracts/ioID.sol:26"
          },
          {
            "label": "projectDeviceCount",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ioID",
            "src": "contracts/ioID.sol:27"
          },
          {
            "label": "_projectIDs",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "contract": "ioID",
            "src": "contracts/ioID.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "fca237c2a72c654f1c4540a63922cf3071730b02ae4c535c90172c5999bff99b": {
      "address": "0x846d73f234f0EA5A6a4FA7Ca7B7A8aA3C206E069",
      "txHash": "0x2bc3138f591ebe34c703e6a703e7e29efde28417dd16c3596cfe00f1a6a4b87f",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:24"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Counter)5026_storage)",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:28"
          },
          {
            "label": "records",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(Record)7615_storage)",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:35"
          },
          {
            "label": "ids",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:36"
          },
          {
            "label": "registeredNFT",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:37"
          },
          {
            "label": "ioIDStore",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:38"
          },
          {
            "label": "ioID",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)5026_storage)": {
            "label": "mapping(address => struct Counters.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Record)7615_storage)": {
            "label": "mapping(address => struct ioIDRegistry.Record)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5026_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Record)7615_storage": {
            "label": "struct ioIDRegistry.Record",
            "members": [
              {
                "label": "hash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "473cfc3ef81048cd9f000f958e3b702406563067a8a072c1e4cfa595ae388ffe": {
      "address": "0x69Cf5c32C0942bd51089BC18F494e4Ad061d0e59",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Project",
            "src": "contracts/Project.sol:11"
          },
          {
            "label": "nextProjectId",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "Project",
            "src": "contracts/Project.sol:12"
          },
          {
            "label": "nameHashes",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "Project",
            "src": "contracts/Project.sol:14"
          },
          {
            "label": "names",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "Project",
            "src": "contracts/Project.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0x69Cf5c32C0942bd51089BC18F494e4Ad061d0e59",
        "0x81757b8E797Bc4Eea5207339fE4E2aD126f2e911",
        "0x8B1db9e87eDf870Fa5E46C5aED39e706d8d41801"
      ]
    },
    "054eff24b6e71ac57b672c4a307b97359d9466b6915c999bdab0e4723c735d6e": {
      "address": "0x64a98FC66E806EcdAa696D7071e83731B6038366",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "project",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IProject)5373",
            "contract": "ProjectRegistry",
            "src": "contracts/ProjectRegistry.sol:9"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IProject)5373": {
            "label": "contract IProject",
            "numberOfBytes": "20"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0x64a98FC66E806EcdAa696D7071e83731B6038366",
        "0x3FDf352498F7f2aC50dB12c16FB244b86AB5E71C",
        "0x121eBbe5ec6E60370423BB085016DFdEdb0208BD"
      ]
    },
    "424d6bae5bd1ad48030cdd23feed402cfee76a76b916429a99be7fa8cdf55654": {
      "address": "0x69Cf5c32C0942bd51089BC18F494e4Ad061d0e59",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Project",
            "src": "contracts/Project.sol:11"
          },
          {
            "label": "nextProjectId",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "Project",
            "src": "contracts/Project.sol:12"
          },
          {
            "label": "nameHashes",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "Project",
            "src": "contracts/Project.sol:14"
          },
          {
            "label": "names",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "Project",
            "src": "contracts/Project.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0x69Cf5c32C0942bd51089BC18F494e4Ad061d0e59",
        "0x8B1db9e87eDf870Fa5E46C5aED39e706d8d41801"
      ]
    },
    "6dea07b5999d059002e97fe67c378df38d12484466a44a9f851137c795721e8b": {
      "address": "0x17AF7b80F130b337720BEA9577Fd1a7D87cdE8B3",
      "txHash": "0x49d04b5802b9bf67a148157b4c3aaadde939b95c7177924cc298cb532c87300d",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:24"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Counter)620_storage)",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:28"
          },
          {
            "label": "records",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(Record)2183_storage)",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:35"
          },
          {
            "label": "ids",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:36"
          },
          {
            "label": "registeredNFT",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:37"
          },
          {
            "label": "ioIDStore",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:38"
          },
          {
            "label": "ioID",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)620_storage)": {
            "label": "mapping(address => struct Counters.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Record)2183_storage)": {
            "label": "mapping(address => struct ioIDRegistry.Record)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)620_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Record)2183_storage": {
            "label": "struct ioIDRegistry.Record",
            "members": [
              {
                "label": "hash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5a8549f83ab7033d83661333da9e7eacfb9ec990402de85bd0a63ad2fa58b0f6": {
      "address": "0x81757b8E797Bc4Eea5207339fE4E2aD126f2e911",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Project",
            "src": "contracts/Project.sol:13"
          },
          {
            "label": "nextProjectId",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "Project",
            "src": "contracts/Project.sol:14"
          },
          {
            "label": "nameHashes",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "Project",
            "src": "contracts/Project.sol:16"
          },
          {
            "label": "names",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "Project",
            "src": "contracts/Project.sol:17"
          },
          {
            "label": "types",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_enum(ProjectType)5322)",
            "contract": "Project",
            "src": "contracts/Project.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ProjectType)5322": {
            "label": "enum ProjectType",
            "members": [
              "Hardware",
              "Virtual"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(ProjectType)5322)": {
            "label": "mapping(uint256 => enum ProjectType)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0x81757b8E797Bc4Eea5207339fE4E2aD126f2e911",
        "0xc217B57998D55E81A8802583d699b5bAFf27bBC9"
      ]
    },
    "bf1a1af1a30d0808f2a2d69bb9cd98011b9626c9621b6f5e9dbcebe30d572f90": {
      "address": "0x3FDf352498F7f2aC50dB12c16FB244b86AB5E71C",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "project",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IProject)755",
            "contract": "ProjectRegistry",
            "src": "contracts/ProjectRegistry.sol:9"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IProject)755": {
            "label": "contract IProject",
            "numberOfBytes": "20"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0x3FDf352498F7f2aC50dB12c16FB244b86AB5E71C",
        "0x781AE577f6C9F262dFa7a5914E6Bd0432213B0F2"
      ]
    },
    "49d6ee112edd028589b045b1382a9e58ed69824528ff4012f067b7f02110c09d": {
      "address": "0xF98DF90DEDAEf4c700F62e010E2cF88ffc7614E5",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "project",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:12"
          },
          {
            "label": "ioIDRegistry",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:13"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:14"
          },
          {
            "label": "projectDeviceContract",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:15"
          },
          {
            "label": "deviceContractProject",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:16"
          },
          {
            "label": "projectAppliedAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:17"
          },
          {
            "label": "projectActivedAmount",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0xF98DF90DEDAEf4c700F62e010E2cF88ffc7614E5",
        "0x83e533eA73AAa47585090e231df387eEeC05e1AA"
      ]
    },
    "a34232f8b28d481033d980c3a6ccf16ba8685119fbadb16e2697dfe5a1ede68e": {
      "address": "0x17AF7b80F130b337720BEA9577Fd1a7D87cdE8B3",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:24"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Counter)3581_storage)",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:28"
          },
          {
            "label": "records",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(Record)6130_storage)",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:35"
          },
          {
            "label": "ids",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:36"
          },
          {
            "label": "registeredNFT",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:37"
          },
          {
            "label": "ioIDStore",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:38"
          },
          {
            "label": "ioID",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)3581_storage)": {
            "label": "mapping(address => struct Counters.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Record)6130_storage)": {
            "label": "mapping(address => struct ioIDRegistry.Record)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3581_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Record)6130_storage": {
            "label": "struct ioIDRegistry.Record",
            "members": [
              {
                "label": "hash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0x17AF7b80F130b337720BEA9577Fd1a7D87cdE8B3",
        "0xB596D9E310D9E4e768ADAF7b63E1225170CAA7D5"
      ]
    },
    "4f05812d29de352acbc3efe136ef35b5f393c32e5f1c1e9ccc974eaa7ff5babe": {
      "address": "0xB596D9E310D9E4e768ADAF7b63E1225170CAA7D5",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:24"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Counter)620_storage)",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:28"
          },
          {
            "label": "records",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(Record)2204_storage)",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:35"
          },
          {
            "label": "ids",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:36"
          },
          {
            "label": "registeredNFT",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:37"
          },
          {
            "label": "ioIDStore",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:38"
          },
          {
            "label": "ioID",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)620_storage)": {
            "label": "mapping(address => struct Counters.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Record)2204_storage)": {
            "label": "mapping(address => struct ioIDRegistry.Record)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)620_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Record)2204_storage": {
            "label": "struct ioIDRegistry.Record",
            "members": [
              {
                "label": "hash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0xB596D9E310D9E4e768ADAF7b63E1225170CAA7D5",
        "0xDFCF9d0531F7866736f49628E344d4a71dEfD662"
      ]
    }
  }
}
